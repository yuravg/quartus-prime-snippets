# -*- mode: snippet -*-
# name: qpp-Multiplier-with-One-Operand-from-PreAdder
# key: qpp-DSP-Features-for-28-nm-Device-Multiplier-with-One-Operand-from-PreAdder
# group: qpp DSP-Features-for-28-nm-Device
# --
// Multiplier with One Operand from PreAdder
// Quartus Prime Verilog Template
// Multiplier with one operand from preadder
// For use with the 28-nm device families

module preadder_input(a, b, c, clock, ena, reset, s);
//This template can be used with 27x27, sum-of-2 27x27 modes on Stratix-V
//     Preadder supports 26-bit preadder (25-bit operands), c input supports 22-bit
//This template can be used with 18x19(signed), sum-of-2 18x19(signed), 27x27 modes on Arria-V and Cyclone-V
//     Preadder supports 19(signed)/27-bit preadder (18(signed)/26-bit operands), c input supports 18/27-bit
parameter ab_width = 25;
parameter c_width = 22;
input [ab_width-1:0] a;
input [ab_width-1:0] b;
input [c_width-1:0] c;
//DSP supports up to 3 clock/ena pairs and 2 async reset signals
//When preadder is used, all registered data inputs must use the same {clock, ena, reset}
input clock;
input ena;
input reset;
output [ab_width+c_width:0] s;

reg signed [ab_width-1:0] a_reg, b_reg;
wire signed [ab_width:0] ab;
reg	[c_width-1:0] c_reg;

//Preadder
//Preadder supports static add/sub
assign ab = a_reg + b_reg;

//input register
always @(posedge clock or posedge reset)
begin
	if (reset == 1'b1)
	begin
		a_reg <= 0;
		b_reg <= 0;
		c_reg <= 0;
	end
	else
	begin
		if (ena == 1'b1)
		begin
			a_reg <= a;
			b_reg <= b;
			c_reg <= c;
		end
	end
end

//Pick an applicable basic mode template
single_mult dsp0 (ab, c_reg, s);
defparam dsp0.a_width = ab_width+1;
defparam dsp0.b_width = c_width;

endmodule
